name: publish-packages
on: 
  push
jobs:
  configure:
    runs-on: self-hosted
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "::set-output name=uid_gid::$(id -u):$(id -g)"
  clone-source:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
  create-packages:
    container: 
      image: mcr.microsoft.com/dotnet/sdk:6.0
      options: --user ${{ needs.configure.outputs.uid_gid }} -e COMPlus_EnableDiagnostics=0
    runs-on: self-hosted
    needs: 
      - clone-source
      - configure
    steps:
      - name: Install paket & coverlet
        run: dotnet tool restore
        working-directory: .
      - name: Restore packages
        working-directory: .
        run: |
          dotnet paket restore
          dotnet restore
      - name: Build tests
        working-directory: tests/ArchRoslyn.Tests/
        run: dotnet build -c Debug --no-restore
      - name: Run tests with code coverage
        working-directory: tests/ArchRoslyn.Tests/
        run: dotnet coverlet bin/Debug/net6.0/ArchRoslyn.Tests.dll -f opencover --target "dotnet" --targetargs "test --no-build" 
      - name: Run report generator
        working-directory: tests/ArchRoslyn.Tests/
        run: dotnet reportgenerator -reports:coverage.opencover.xml -targetdir:coverage
      - name: Upload coverage to codecov
        working-directory: tests/ArchRoslyn.Tests/
        run: |
            curl -Os https://uploader.codecov.io/v0.1.17/linux/codecov
            chmod +x codecov
            ./codecov -f coverage.opencover.xml
      - name: Build roslyn analyzer
        working-directory: src/ArchRoslyn.Package
        run: dotnet build -c Release
      - name: Build attributes package
        working-directory: src/ArchRoslyn.Abstractions
        run: dotnet build -c Release
      - name: Pack roslyn analyzer
        working-directory: src/ArchRoslyn.Package
        run: dotnet paket pack ../nupkg
      - name: Pack attributes package
        working-directory: src/ArchRoslyn.Abstractions
        run: dotnet paket pack ../nupkg
  store-artifacts:
    needs: create-packages
    runs-on: self-hosted
    steps:
      - name: Store packages
        uses: actions/upload-artifact@v3
        with:
          name: nuget_packages
          path: src/nupkg
      - name: Store coverage report
        uses: actions/upload-artifact@v3
        with:
          path: tests/ArchRoslyn.Tests/coverage
          name: coverage
  publish-to-nuget:
    environment: Main
    if: github.ref == 'refs/heads/master'
    needs: 
      - store-artifacts
      - configure
    runs-on: self-hosted
    container:
      image: mcr.microsoft.com/dotnet/sdk:6.0
      options: --user ${{ needs.configure.outputs.uid_gid }} -e COMPlus_EnableDiagnostics=0
    steps:
      - name: Install paket & coverlet
        run: dotnet tool restore
        working-directory: .
      - name: Push packages
        env:
          NUGET_FEED_URL: ${{ secrets.NUGET_FEED_URL }}
          NUGET_KEY: ${{ secrets.NUGET_KEY }}
        working-directory: src/nupkg
        run: |
          # Read the main string
          text=`ls *.nupkg`

          # Split the string by space
          readarray -d " " -t strarr <<< "$text"

          # Print each value of the array by 
          # using loop
          for (( n=0; n < ${#strarr[*]}; n++))
          do
            dotnet paket push --url "$NUGET_FEED_URL" --api-key "$NUGET_KEY" "${strarr[n]}"
          done
          

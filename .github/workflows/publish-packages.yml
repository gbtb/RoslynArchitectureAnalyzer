name: publish-packages
on: 
  push
jobs:
  configure:
    runs-on: self-hosted
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "::set-output name=uid_gid::$(id -u):$(id -g)"
  clone-source:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
  restore:
    container: 
      image: mcr.microsoft.com/dotnet/sdk:6.0
      options: --user ${{ needs.configure.outputs.uid_gid }} -e COMPlus_EnableDiagnostics=0
    runs-on: self-hosted
    needs: 
      - clone-source
      - configure
    steps:
      - name: Install paket & coverlet
        run: dotnet tool restore
        working-directory: .
      - name: Restore packages
        working-directory: .
        run: |
          dotnet paket restore
          dotnet restore
      - name: Build tests
        working-directory: tests/Roslyn.Architecture.Tests/
        run: dotnet build -c Debug --no-restore
      - name: Run tests with code coverage
        working-directory: tests/Roslyn.Architecture.Tests/
        run: dotnet coverlet bin/Debug/net6.0/Roslyn.Architecture.Tests.dll -f opencover --target "dotnet" --targetargs "test --no-build" 
      - name: Run report generator
        working-directory: tests/Roslyn.Architecture.Tests/
        run: dotnet reportgenerator -reports:coverage.opencover.xml -targetdir:coverage
      - name: Upload coverage to codecov
        working-directory: tests/Roslyn.Architecture.Tests/
        run: |
            curl -Os https://uploader.codecov.io/v0.1.17/linux/codecov
            chmod +x codecov
            ./codecov -f coverage.opencover.xml
      - name: Pack roslyn analyzer
        working-directory: src/Roslyn.Architecture.Analyzer
        run: dotnet build -c release
      - name: Pack attributes package
        working-directory: src/Roslyn.Architecture.Abstractions
        run: dotnet build -c release
  store-artifacts:
    needs: restore
    runs-on: self-hosted
    steps:
      - name: Store packages
        uses: actions/upload-artifact@v3
        with:
          name: nuget_packages
          path: src/nupkg
      - name: Store coverage report
        uses: actions/upload-artifact@v3
        with:
          path: tests/Roslyn.Architecture.Tests/coverage
          name: coverage
  publish-to-nuget:
    environment: Main
    if: github.ref == 'refs/heads/master'
    needs: 
      - store-artifacts
      - configure
    runs-on: self-hosted
    container:
      image: mcr.microsoft.com/dotnet/sdk:6.0
      options: --user ${{ needs.configure.outputs.uid_gid }} -e COMPlus_EnableDiagnostics=0
    steps:
      #- name: Prepare packages
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: nuget_packages
      - name: Push packages
        env: # Or as an environment variable
          NUGET_FEED_URL: ${{ secrets.NUGET_FEED_URL }}
          NUGET_KEY: ${{ secrets.NUGET_KEY }}
        working-directory: src/nupkg
        run: dotnet nuget push --source "$NUGET_FEED_URL" --api-key="$NUGET_KEY" *.nupkg

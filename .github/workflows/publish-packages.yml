name: publish-packages
on: 
  push:
    branches:
      - master
jobs:
  #clean-after-ghrunner:
  #  runs-on: self-hosted
  #  container: 
  #    image: mcr.microsoft.com/dotnet/sdk:6.0
  #  steps:
  #    - name: Clean the workspace
  #      run: rm -rf $GITHUB_WORKSPACE/*
  clone-source:
    needs: clean-after-ghrunner
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
  restore:
    container: 
      image: mcr.microsoft.com/dotnet/sdk:6.0
      volumes: 
        - /github:/tmp
    runs-on: self-hosted
    needs: clone-source
    steps:
      - name: Install paket & coverlet
        run: dotnet tool restore
        working-directory: .
      - name: Restore packages
        working-directory: .
        run: |
          dotnet paket restore
          dotnet restore
  run-tests:
    container: 
      image: mcr.microsoft.com/dotnet/sdk:6.0
      volumes: 
        - /github:/tmp
    runs-on: self-hosted
    needs: restore
    steps:
    - name: Build tests
      working-directory: tests/Roslyn.Architecture.Tests/
      run: dotnet build -c Debug --no-restore
    - name: Run tests with code coverage
      working-directory: tests/Roslyn.Architecture.Tests/
      run: dotnet coverlet bin/Debug/net6.0/Roslyn.Architecture.Tests.dll -f opencover --target "dotnet" --targetargs "test --no-build" 
    - name: Run report generator
      working-directory: tests/Roslyn.Architecture.Tests/
      run: dotnet reportgenerator -reports:coverage.opencover.xml -targetdir:coverage
    - name: Upload coverage to codecov
      working-directory: tests/Roslyn.Architecture.Tests/
      run: |
          curl -Os https://uploader.codecov.io/v0.1.17/linux/codecov
          chmod +x codecov
          ./codecov -f coverage.opencover.xml
